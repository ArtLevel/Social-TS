{"version":3,"file":"static/js/168.282ac714.chunk.js","mappings":"0KACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,mBCQnKA,EAA8B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KACvCC,EAAO,YAD+C,EAATC,GAGnD,OACC,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACC,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,OCPVM,EAAwB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvC,OACC,gBAAKJ,UAAWC,EAAAA,QAAhB,SAA4BG,K,uCCHxBC,GAAcC,EAAAA,EAAAA,GAAiB,IAaxBC,GAAsBC,EAAAA,EAAAA,GAA4B,CAC9DC,KAAM,kBAD4BD,EAX6B,SAACE,GAChE,OAAO,kBAAMC,SAAUD,EAAME,aAAtB,WACN,0BACEC,EAAAA,EAAAA,IAAY,qBAAsB,iBAAkB,CAACC,EAAAA,EAAUT,GAAcU,EAAAA,OAE/E,0BACC,oD,UCXH,GAAeC,EAAAA,EAAAA,ICSsB,WACpC,OAA8BC,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMC,eAApDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAYJ,EAAQK,KAAI,SAAAC,GAAC,OAAI,SAAC9B,EAAD,CAAuBG,GAAI2B,EAAE3B,GAAIF,KAAM6B,EAAE7B,MAAxB6B,EAAE3B,OAChD4B,EAAaN,EAASI,KAAI,SAAAG,GAAC,OAAI,SAACzB,EAAD,CAAoBC,QAASwB,EAAExB,SAAjBwB,EAAE7B,OAMrD,OACC,iBAAKC,UAAWC,EAAAA,QAAhB,WACC,gBAAKD,UAAWC,EAAAA,aAAhB,SACEuB,KAEF,iBAAKxB,UAAWC,EAAAA,SAAhB,UACE0B,GACD,SAACpB,EAAD,CAAqBI,SAXF,SAACkB,GACtBP,EAASQ,EAAAA,GAAAA,YAAoBD,EAAOE","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\"};","import s from '../Dialogs.module.css'\nimport { NavLink } from 'react-router-dom'\nimport { FC } from 'react'\n\ninterface IDialogItem {\n\tid: number\n\tname: string\n}\n\nexport const DialogItem: FC<IDialogItem> = ({ name, id }) => {\n\tconst path = '/dialogs/' + id\n\n\treturn (\n\t\t<div className={s.dialog + ' ' + s.active}>\n\t\t\t<NavLink to={path}>{name}</NavLink>\n\t\t</div>\n\t)\n}","import s from '../Dialogs.module.css'\nimport { FC } from 'react'\n\ninterface IMessage {\n\tmessage: string\n}\n\nexport const Message: FC<IMessage> = ({ message }) => {\n\treturn (\n\t\t<div className={s.message}>{message}</div>\n\t)\n}","import { InjectedFormProps, reduxForm } from 'redux-form'\nimport { createField, Textarea } from '../common/FormsControls/FormsControls'\nimport { maxLengthCreator, required } from '../../utils/validators/validators'\nimport { AddMessageFormPT } from '../../types/types'\nimport { FC } from 'react'\n\nconst maxLength50 = maxLengthCreator(50)\n\nconst AddMessageForm: FC<InjectedFormProps<AddMessageFormPT>> = (props) => {\n\treturn <form onSubmit={props.handleSubmit}>\n\t\t<div>\n\t\t\t{createField('Enter your message', 'newMessageBody', [required, maxLength50], Textarea)}\n\t\t</div>\n\t\t<div>\n\t\t\t<button>Add message</button>\n\t\t</div>\n\t</form>\n}\n\nexport const AddMessageFormRedux = reduxForm<AddMessageFormPT>({\n\tform: 'addMessageForm'\n})(AddMessageForm)\n","import { WithAuthRedirect } from '../../hoc/WithAuthRedirect'\nimport { Dialogs } from './Dialogs'\n\nexport default WithAuthRedirect(Dialogs)","import { DialogItem } from './DialogItem/DialogItem'\nimport { Message } from './Message/Message'\nimport { FC } from 'react'\nimport { AddMessageFormPT } from '../../types/types'\nimport { actions } from '../../types/Action/ActionNamesConst'\nimport s from './Dialogs.module.css'\nimport { AddMessageFormRedux } from './AddMessageForm'\nimport { useAppDispatch, useAppSelector } from '../../redux/store/reduxStore'\n\ninterface IDialogs {\n}\n\nexport const Dialogs: FC<IDialogs> = () => {\n\tconst { dialogs, messages } = useAppSelector(state => state.dialogsPage)\n\tconst dispatch = useAppDispatch()\n\n\tconst dialogsEl = dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name} />)\n\tconst messagesEl = messages.map(m => <Message key={m.id} message={m.message} />)\n\n\tconst addNewMessage = (values: AddMessageFormPT) => {\n\t\tdispatch(actions.sendMessage(values.newMessageBody))\n\t}\n\n\treturn (\n\t\t<div className={s.dialogs}>\n\t\t\t<div className={s.dialogsItems}>\n\t\t\t\t{dialogsEl}\n\t\t\t</div>\n\t\t\t<div className={s.messages}>\n\t\t\t\t{messagesEl}\n\t\t\t\t<AddMessageFormRedux onSubmit={addNewMessage} />\n\t\t\t</div>\n\t\t</div>\n\t)\n}"],"names":["DialogItem","name","path","id","className","s","to","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","props","onSubmit","handleSubmit","createField","required","Textarea","WithAuthRedirect","useAppSelector","state","dialogsPage","dialogs","messages","dispatch","useAppDispatch","dialogsEl","map","d","messagesEl","m","values","actions","newMessageBody"],"sourceRoot":""}